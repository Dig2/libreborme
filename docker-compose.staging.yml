---
version: "3.4"

services:

  nginx:
    image: registry.gitlab.com/libreborme/libreborme/nginx:staging
    # build: ./docker/nginx
    depends_on:
      - app
    #    healthcheck:
    #      test: ["CMD", "curl", "-f", "http://localhost"]
    #      interval: 1m30s
    #      timeout: 10s
    #      retries: 3
    #      start_period: 40s
    ports:
      - "80:80"
    volumes:
      - /opt/libreborme/static:/static
    networks:
      - public
    deploy:
      replicas: 1

  app:
    image: registry.gitlab.com/libreborme/libreborme:staging
    # build: .
    command: make staging
    depends_on:
      - postgres
      - elasticsearch
    ports:
      - "8000:8000"
    volumes:
      - /opt/libreborme/static:/static
    networks:
      - public
      - internal
    deploy:
      replicas: 1
    environment:
      DJANGO_SETTINGS_MODULE: libreborme.settings_staging
      ENV_TYPE: staging
      ELASTICSEARCH_URI: http://elastic:changeme@elasticsearch:9200
      RAVEN_DSN: https://d0c18e5df3ac420a89014b9e0dafdd55@sentry.io/1290035

  postgres:
    # restart: always
    image: postgres:9.5
    volumes:
      - db-data:/var/lib/postgresql
    networks:
      - internal
    environment:
      POSTGRES_DB: libreborme
      POSTGRES_USER: libreborme
      POSTGRES_PASSWORD: password

  elasticsearch:
    # restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - internal
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"

volumes:
  db-data:
  es-data:

networks:
  public:
  internal:
